import tkinter as tk
from tkinter import ttk
import serial
import time

# Connect to Arduino
ser = serial.Serial('COM7', 9600, timeout=1)  # Change 'COM7' to your Arduino's serial port
time.sleep(2)  # Give time for the connection to establish

# Function to send delay values for each channel
def send_delay(channel, delay):
    message = f"{channel}:{delay}\n"
    ser.write(message.encode())
    print(f"Sent: {message}")

# Function to update the pulse graphic and delay text
def update_pulse(channel, delay):
    pulse_canvas.delete("all")
    width = 400
    height = 100

    # Draw axes
    pulse_canvas.create_line(30, height // 2, width - 30, height // 2, fill="black")
    pulse_canvas.create_text(15, height // 2, text="0 ns", anchor='e', fill='black')
    pulse_canvas.create_text(width - 30, height // 2, text="250 ns", anchor='w', fill='black')

    # Draw the pulse based on the delay value
    pulse_start = 50  # Starting position for the pulse
    pulse_width = int((delay / 250) * (width - 80))  # Calculate pulse width based on delay

    if pulse_width > 0:
        pulse_canvas.create_rectangle(pulse_start, height // 2 - 10, pulse_start + pulse_width, height // 2 + 10, fill="blue")

    pulse_canvas.create_text(pulse_start + pulse_width + 10, height // 2, text=f"{delay} ns", anchor='w', fill='blue')

    # Update delay text at the bottom
    delay_text_var.set(f"Channel {channel} is now delayed by {delay} ns")

# Create the main window
root = tk.Tk()
root.title("Channel Delay Control - Delay Board")
root.configure(bg='#f0f0f0')

# Title Label
title_label = tk.Label(root, text="Channel Delay Control", font=("Helvetica", 16), bg='#f0f0f0')
title_label.pack(pady=10)

# Style for ttk widgets
style = ttk.Style()
style.configure("TLabel", background='#f0f0f0', foreground='blue')
style.configure("TFrame", background='#f0f0f0')
style.configure("TScale", background='#f0f0f0')

# Create sliders for each channel (0-7)
sliders = []
delay_text_var = tk.StringVar()
delay_text_var.set("Select a channel to set delay.")

for i in range(8):
    frame = ttk.Frame(root)
    frame.pack(pady=10)

    label = ttk.Label(frame, text=f"Channel {i} Delay (ns):")
    label.pack(side=tk.LEFT)

    slider = ttk.Scale(frame, from_=0, to=250, orient=tk.HORIZONTAL, length=200)
    slider.set(50)  # Default value
    slider.pack(side=tk.LEFT, padx=10)

    # Display current delay value
    delay_label = ttk.Label(frame, text="50 ns")
    delay_label.pack(side=tk.LEFT, padx=5)

    # Update delay value when the slider is changed
    def on_slide(event, ch=i, sl=slider, lbl=delay_label):
        current_delay = int(sl.get())
        lbl.config(text=f"{current_delay} ns")
        send_delay(ch, current_delay)
        update_pulse(ch, current_delay)

    slider.bind("<Motion>", on_slide)

    sliders.append(slider)

# Canvas to display pulse graphic
pulse_canvas = tk.Canvas(root, width=400, height=100, bg='white')
pulse_canvas.pack(pady=20)

# Delay status text
status_label = ttk.Label(root, textvariable=delay_text_var, font=("Helvetica", 12), background='#f0f0f0', foreground='green')
status_label.pack(pady=10)

# Start the Tkinter event loop
root.mainloop()

# Close the serial connection when GUI closes
ser.close()
